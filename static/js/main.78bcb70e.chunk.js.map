{"version":3,"sources":["reducers/rootReducer.js","reducers/reducer.js","containers/Result.js","components/TextInput.js","components/TextArea.js","containers/Input.js","components/Button.js","actions/action.js","containers/App.js","utils/encryption.js","serviceWorker.js","index.js","store.js"],"names":["combineReducers","app","state","arguments","length","undefined","action","type","result","payload","Object","objectSpread","defineProperty","fieldId","value","Content","styled","textarea","_templateObject","Result","props","console","log","react_default","a","createElement","readOnly","Wrapper","div","TextInput_templateObject","LabelWrapper","label","_templateObject2","InputWrapper","input","_templateObject3","TextInput","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","e","target","validity","valid","setState","setValue","id","_this$props","onChange","React","Component","TextArea_templateObject","TextArea_templateObject2","TextAreaWrapper","TextArea_templateObject3","TextArea","TextArea_Wrapper","TextArea_LabelWrapper","Input_templateObject","Input","Input_Wrapper","components_TextInput","assign","components_TextArea","Container","Button_templateObject","ButtonWrapper","button","Button_templateObject2","Icon","span","Button_templateObject3","Label","_templateObject4","Button","styles","method","handleClick","style","onClick","index_esm","ContainerWrapper","App_templateObject","Row","App_templateObject2","Column","App_templateObject3","App_templateObject4","connect","dispatch","encryptFn","setTimeout","_ref","asyncToGenerator","regenerator_default","mark","_callee","getState","_state$app","_state$app$data","data","_state$app$code","code","_state$app$interation","interationCount","_state$app$keySize","keySize","_state$app$passphrase","passphrase","_state$app$iv","iv","_state$app$salt","salt","saltHex","key","encrypted","wrap","_context","prev","next","Hex","parse","PBKDF2","R","iterations","AES","encrypt","Base64","stringify","ciphertext","error","concat","stop","_x","_x2","apply","decryptFn","_ref2","_callee2","_state$app2","_state$app2$data","_state$app2$code","_state$app2$interatio","_state$app2$keySize","_state$app2$passphras","_state$app2$iv","_state$app2$salt","cipherParams","decrypted","_context2","CryptoJS","lib","CipherParams","create","enc","decrypt","Utf8","_x3","_x4","className","containers_Input","color","App_ButtonWrapper","components_Button","marginLeft","containers_Result","Boolean","window","location","hostname","match","ReactDOM","render","es","store","initialState","createStore","rootReducer","applyMiddleware","thunk","configureStore","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78bcb70e.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport reducer from './reducer';\nexport default combineReducers({\n  app: reducer\n})","export default (state = {}, action) => {\n  switch (action.type) {\n  case 'SIMPLE_ACTION':\n    return {\n      result: action.payload\n    }\n  case 'SET_VALUE':\n    return {\n      ...state,\n      [action.fieldId]: action.value\n    }\n  default:\n    return state\n  }\n}","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Content =  styled.textarea`\n  margin: 10px 0 10px 0;\n  min-width: 490px;\n  height: 580px;\n  resize: none;\n  font-size: 18px;\n`\nconst Result = (props) => {\n  console.log('!!!props: ', props)\n  return (\n    <Content readOnly value={ props.app.result }></Content>\n  )\n}\nexport default Result\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  // justify-content: flex-start;\n  margin: 10px 0 10px 0;\n`\n\nconst LabelWrapper = styled.label`\n  padding-right: 10px;\n  font-size: 18px;\n  text-align: left;\n  width: 150px;\n`\nconst InputWrapper = styled.input`\n  flex-grow: 1;\n  width: 350px;\n  height: 25px;\n`\n\nclass TextInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { value: '' }\n\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    if (e.target.validity.valid) {\n      this.setState({ value: e.target.value })\n      this.props.setValue(this.props.id, e.target.value)\n    }\n  }\n\n  render() {\n    const { label, type } = this.props\n    // console.log('textInoput:', this.props)\n    return(\n      <Wrapper>\n        <LabelWrapper>{ label } : </LabelWrapper>\n        <InputWrapper type={ type } value={ this.state.value } onChange={ this.handleChange } />\n      </Wrapper>\n    )\n  }\n}\n\nexport default TextInput","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  // justify-content: flex-start;\n  margin: 10px 0 10px 0;\n`\n\nconst LabelWrapper = styled.label`\n  padding-right: 10px;\n  font-size: 18px;\n  text-align: left;\n  width: 150px;\n`\nconst TextAreaWrapper = styled.textarea`\n  flex-grow: 1;\n  height: 300px;\n  resize: none;\n  font-size: 15px;\n`\n\nclass TextArea extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { value: '' }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value })\n    this.props.setValue(this.props.id, e.target.value)\n  }\n\n  render() {\n    const { label } = this.props\n    return(\n      <Wrapper>\n        <LabelWrapper>{ label } : </LabelWrapper>\n        <TextAreaWrapper value={ this.state.value } onChange={ this.handleChange } />\n      </Wrapper>\n    )\n  }\n}\n\nexport default TextArea","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport TextInput from '../components/TextInput'\nimport TextArea from '../components/TextArea'\n\nconst Wrapper = styled.div``\n\nconst Input = (props) => {\n  return (\n    <Wrapper>\n      <TextInput id='code' label='Code' type='text' { ...props } />\n      <TextInput id='interationCount' label='Interation Count' type='number' { ...props } />\n      <TextInput id='keySize' label='Key Size' type='number' { ...props } />\n      <TextInput id='passphrase' label='Passphrase' type='text' { ...props } />\n      <TextInput id='iv' label='IV' type='text' { ...props } />\n      <TextInput id='salt' label='SALT' type='text' { ...props } />\n      <TextArea id='data' label='Plain Text / Encrypted Text' type='text' { ...props } />\n    </Wrapper>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { FaLock, FaLockOpen } from 'react-icons/fa'\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 10px 0 10px 0;\n`\nconst ButtonWrapper = styled.button`\n  height: 50px;\n  width: 100%;\n  border-radius: 5px;\n`\n\nconst Icon = styled.span`\n  padding-right: 10px;\n  font-size: 15px;\n`\nconst Label = styled.span`\n  font-size: 15px;\n`\nclass Button extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { value: '' }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value })\n    this.props.setValue(this.props.id, e.target.value)\n  }\n\n  render() {\n    const { styles, method, handleClick } = this.props\n    return(\n      <Container style={styles}>\n        <ButtonWrapper onClick={ () => handleClick() }>\n          <Icon>\n            {\n              method === 'encrypt' ? <FaLock /> : <FaLockOpen />\n            }\n          </Icon>\n          <Label>{ this.props.label }</Label>\n        </ButtonWrapper>\n      </Container>\n    )\n  }\n}\n\nexport default Button","export const testAction = () => dispatch => {\n  dispatch({\n    type: 'SIMPLE_ACTION',\n    payload: 'result_of_simple_action'\n  })\n}\n\nexport const setValue = (fieldId, value) => ({\n  type: 'SET_VALUE',\n  fieldId,\n  value\n})","import React from 'react'\nimport styled from '@emotion/styled'\nimport { connect } from 'react-redux'\nimport './App.css';\nimport Result from './Result'\nimport Input from './Input'\nimport Button from '../components/Button'\nimport { setValue } from '../actions/action'\nimport { encrypt, decrypt } from '../utils/encryption'\n\nconst ContainerWrapper = styled.div`\n  // overflow: hidden;\n  margin: 1em 0;\n  background: #1c92d2;  /* fallback for old browsers */\n  background: -webkit-linear-gradient(to right, #1c92d2, #f2fcfe);  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #1c92d2, #f2fcfe); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n  border-radius: 2px;\n  -webkit-box-shadow: 10px 10px 5px 0px rgba(9,0,0,0.75);\n  -moz-box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n  box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n`\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100%;\n`\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n  flex: 1;\n  margin-left: 10px;\n  margin-right: 10px;\n`\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;  \n`\n\nconst App = (props) => {\n  console.log('app: ', props)\n  return (\n    <div className=\"App\">\n      <div className=\"App-Detail\">\n        <ContainerWrapper>\n          <Row>\n            <Column>\n              <Input style={{ color: 'red'}} { ...props } />\n              <ButtonWrapper>\n                <Button label='Encrypt' handleClick={ () => props.encryptFn() } method='encrypt' { ...props } />\n                <Button styles={{marginLeft: '10px'}} handleClick={ () => props.decryptFn() } label='Decrypt' method='decrypt' { ...props } />\n                {/* <Button styles={{marginLeft: '10px'}} label='Clear' method='clear' { ...props } /> */}\n              </ButtonWrapper>\n            </Column>\n            <Column>\n              <Result { ...props } />\n            </Column>\n            \n\n          </Row>\n          \n        </ContainerWrapper>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return { ...state }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setValue: (fieldId, value) => dispatch(setValue(fieldId, value)),\n  encryptFn: () => { \n    dispatch(setValue('result', 'encrypting...'))\n    setTimeout( () => { \n      dispatch(encrypt())\n    }, 1000)\n    \n  },\n  decryptFn: () => {\n    dispatch(setValue('result', 'decrypting...'))\n    setTimeout( () => { \n      dispatch(decrypt())\n    }, 1000)\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import CryptoJS from 'crypto-js'\nimport AES from 'crypto-js/aes'\nimport Base64 from 'crypto-js/enc-base64'\nimport Hex from 'crypto-js/enc-hex'\nimport PBKDF2 from 'crypto-js/pbkdf2'\nimport * as R from 'ramda'\nimport { setValue } from '../actions/action'\n\nexport const encrypt = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const { data = '', code = '', interationCount = 0, keySize = 0, passphrase = '', iv = '', salt = '' } = state.app\n\n    try {\n      const saltHex = Hex.parse(salt)\n      const key = PBKDF2(R.concat(passphrase, code), saltHex, { keySize: keySize, iterations: interationCount })\n      const encrypted = AES.encrypt(data, key, { iv: Hex.parse(iv) })\n      dispatch(setValue('result', Base64.stringify(encrypted.ciphertext)))\n    } catch (error) {\n      dispatch(setValue('result', `Error encryption: ${error}`))\n    }\n  }\n}\n\nexport const decrypt = () => {\n  return async (dispatch, getState) => {\n    const state = getState()\n    const { data = '', code = '', interationCount = 0, keySize = 0, passphrase = '', iv = '', salt = '' } = state.app\n\n    try {\n      const saltHex = Hex.parse(salt)\n      const key = PBKDF2(R.concat(passphrase, code), saltHex, { keySize: keySize, iterations: interationCount })\n      const cipherParams = CryptoJS.lib.CipherParams.create(\n        {\n          ciphertext: CryptoJS.enc.Base64.parse(data)\n        }\n      )\n      const decrypted = AES.decrypt(cipherParams, key, { iv: Hex.parse(iv) })\n      dispatch(setValue('result', CryptoJS.enc.Utf8.stringify(decrypted)))\n    } catch (error) {\n      dispatch(setValue('result', `Error decryption: ${error}`))\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport configureStore from './store'\nimport './index.css'\nimport App from './containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <App />\n  </Provider>, \n  document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\n\nexport default function (initialState={}) {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    applyMiddleware(thunk)\n  )\n  window.store = store\n  return store\n}"],"sourceRoot":""}